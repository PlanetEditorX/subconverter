name: Update Rules List

on:
  workflow_dispatch:  # 手动触发工作流
  schedule:
    - cron: '0 16 * * *'  # 每天0点执行一次

jobs:
  Update:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - arch: ai-domains
            name: "AI"
            info: "ChatGPT Domains"
            url: https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/category-ai-!cn.list
            download_file: ai-domains.list
            file_name: ChatGPT.list
            final_file: custom/ChatGPT.list
            time: 10
          - arch: anti-ad
            name: "anti-AD"
            info: "Anti-AD Domains"
            url: https://raw.githubusercontent.com/privacy-protection-tools/anti-AD/master/anti-ad-clash.yaml
            download_file: anti-ad-clash.list
            file_name: anti-AD.list
            final_file: custom/anti-AD.list
            time: 20

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: 安装依赖
        run: |
          sudo apt-get update
          sudo apt-get install -y curl jq

      - name: 下载规则列表
        run: |
          echo "下载${{ matrix.arch }}域名规则列表"
          curl -L ${{ matrix.url }} -o ${{ matrix.download_file }}
          echo "下载完成，保存到 ${{ matrix.download_file }}"

      - name: 处理${{ matrix.name }}域名规则列表
        run: |
          echo "处理${{ matrix.name }}规则列表"
          if [ ${{ matrix.arch }} == 'ai-domains' ]; then
            echo "去除+."
            sed -i 's/^+\.//g' ${{ matrix.download_file }}
          elif [ ${{ matrix.arch }} == 'anti-ad' ]; then
            echo "去除自带注释"
            awk '/^payload:/ {found=1; next} found' ${{ matrix.download_file }} > temp.list && mv temp.list ${{ matrix.download_file }}
            echo "去除  - '+."
            sed -i "s/^[[:space:]]*-[[:space:]]*'+\\.\\(.*\\)'/\\1/" ${{ matrix.download_file }}
          fi

          # 为每一行加上 DOMAIN-SUFFIX, 前缀
          echo "生成${{ matrix.name }}规则文件"
          echo '# 内容：${{ matrix.info }}' > ${{ matrix.final_file }}
          echo "# 数量：$(wc -l < ${{ matrix.download_file }})"条 >> ${{ matrix.final_file }}
          echo -e "# 更新：$(date +'%Y-%m-%d %H:%M:%S' --date='+8 hours')\n" >> ${{ matrix.final_file }}
          sed 's/^/DOMAIN-SUFFIX,/g' ${{ matrix.download_file }} >> ${{ matrix.final_file }}
          echo "生成完成，保存到 ${{ matrix.final_file }}"

      - name: 检查是否存在时间以外的更新
        id: check_diff
        run: |
          # 比较规则文件的差异，忽略 # 更新 开头的行
          if git diff --ignore-matching-lines='^# 更新' --quiet ${{ matrix.final_file }}; then
            echo "No changes excluding timestamp."
            echo "has_changes=false" >> $GITHUB_OUTPUT
          else
            echo "Changes detected excluding timestamp."
            echo "has_changes=true" >> $GITHUB_OUTPUT
          fi
          
      - name: 提交更新
        if: steps.check_diff.outputs.has_changes == 'true'
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          sleep ${{ matrix.time }}  # 等待一段时间，避免同时提交
          git pull origin main || true  # 确保拉取最新代码
          echo "提交更新到 ${{ matrix.final_file }}"
          git add ${{ matrix.final_file }}
          git commit -m "Update ${{ matrix.file_name }} with ${{ matrix.info }} domains"
          git push
